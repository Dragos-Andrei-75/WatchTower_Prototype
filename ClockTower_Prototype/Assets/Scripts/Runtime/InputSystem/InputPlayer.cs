//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Runtime/InputSystem/InputPlayer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputPlayer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputPlayer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputPlayer"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""e5a461a5-d4cf-4335-8430-c1ef5c243128"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2e92cc97-d1c0-4e8c-86f1-aef4eea6fd0a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Walk"",
                    ""type"": ""Button"",
                    ""id"": ""5635ba52-e43c-4d54-899c-9598e8d270e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d511427b-1a94-4757-bb45-08e3319aadf4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""b0fbac7a-feda-4127-8882-da6038e7fe4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwimOut"",
                    ""type"": ""Button"",
                    ""id"": ""21cf9ae8-0a77-4b91-b1aa-ef4e35c4a954"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""b0bdbbac-a403-4b0a-9a84-202d19b409e5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""95417363-7352-4cb9-b7a7-dbe9263df68e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3d68f362-a925-46fa-bf35-05af35ff8a66"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eda33cea-c9d8-4f43-82a5-3d7b6a84ce5d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftButton"",
                    ""type"": ""Button"",
                    ""id"": ""bdca1ce9-b73c-47f5-b005-4e586d4b6e86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightButton"",
                    ""type"": ""Button"",
                    ""id"": ""809f165b-81a5-4025-8ed5-6734264e78e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Direction"",
                    ""id"": ""c671be8e-f41f-4f99-bdb4-fef256e5b525"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""35339b10-c67c-4085-9540-c8f8e20b6e7d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0e7fc357-75ee-43a3-b3a4-6525c0e54160"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e851ab02-f1a5-4715-8248-01925f49918d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""91f51716-c87b-4bae-94f7-7df6dec19cf0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c21063b2-b6af-4717-92f1-16f2efb29176"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9975cf5d-014a-4c47-af68-f3a454ab3bf7"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8392485c-b63a-4fed-807d-2d176f518886"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cbdc2c-65c9-4fcb-a30f-a23b1226ed61"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6112f424-7461-4b22-a1b1-c7b2d1bd4683"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1b46d13-1ebd-425c-8c07-80f8901b08e9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b47b6b4f-5dcd-45e9-a8ab-a8dc36b19380"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06c55348-4abf-492c-a9c3-0a36bd7647b4"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""705ab64e-213d-4f44-9d4e-e27b3c4ed143"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwimOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2b87054-87db-4d48-8be7-c297d44fb275"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LoadOut"",
            ""id"": ""1de1da3c-68a0-4b88-964b-dceb1a9b9e72"",
            ""actions"": [
                {
                    ""name"": ""Wheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c54e5f44-59ca-43a7-ba58-04b6a703ffa5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""6b49f435-992b-44a8-8a13-755d65da994a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""3600b5b4-5e4a-43f3-9cdd-103b03dd984a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon3"",
                    ""type"": ""Button"",
                    ""id"": ""2c7beef7-1cf1-4758-abd2-52f9500441a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon4"",
                    ""type"": ""Button"",
                    ""id"": ""fd4b9886-a1ab-4172-b792-5357b7768aee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon5"",
                    ""type"": ""Button"",
                    ""id"": ""ab8ebf88-fd67-4c03-856a-b232e3e65d72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon6"",
                    ""type"": ""Button"",
                    ""id"": ""4d3c5a4d-7f59-4781-9992-3ad761b73228"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon7"",
                    ""type"": ""Button"",
                    ""id"": ""33a79b4e-38bf-4e95-ac52-4a3040b2f99a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon8"",
                    ""type"": ""Button"",
                    ""id"": ""543cf474-bb41-42f7-ae35-4ccd4e8a3319"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon9"",
                    ""type"": ""Button"",
                    ""id"": ""6bb0dbe9-bf61-41ed-a75a-4f29dee8bb34"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon10"",
                    ""type"": ""Button"",
                    ""id"": ""fd7dcb6e-3c87-4217-b6ed-fca710bbd2e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon11"",
                    ""type"": ""Button"",
                    ""id"": ""8dc4b79d-c8b7-4fc2-b3ad-ed7498896544"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""97f8d504-d803-4b3e-bf16-38c9cc9c588f"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ad18c9b-a8cb-4d4b-bcb4-787c20d28f8f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbfe327d-0fce-4b6b-a6f2-4738bb5c0fd2"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa514bc1-6409-404b-a339-e00606876777"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d1e4e96-e6b7-4dbb-b193-96cefbfd2abb"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a8bbb85-4cab-44f8-bf48-637e9a53a1c2"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb5d5d55-288d-4ecd-9056-13087458fae2"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf9872ec-333b-4b03-9be2-8eee5efcb6b1"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d054771-8972-4dff-a868-34161bcf2218"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45df4971-37d1-4353-a25c-8024a8267415"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9153b44d-656d-4ebb-be63-5d1926812df5"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8705b62-b9c5-4d1b-9778-71bdbdaf16c0"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon11"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Move = m_Character.FindAction("Move", throwIfNotFound: true);
        m_Character_Walk = m_Character.FindAction("Walk", throwIfNotFound: true);
        m_Character_Jump = m_Character.FindAction("Jump", throwIfNotFound: true);
        m_Character_Crouch = m_Character.FindAction("Crouch", throwIfNotFound: true);
        m_Character_SwimOut = m_Character.FindAction("SwimOut", throwIfNotFound: true);
        m_Character_Dash = m_Character.FindAction("Dash", throwIfNotFound: true);
        m_Character_Use = m_Character.FindAction("Use", throwIfNotFound: true);
        m_Character_MouseX = m_Character.FindAction("MouseX", throwIfNotFound: true);
        m_Character_MouseY = m_Character.FindAction("MouseY", throwIfNotFound: true);
        m_Character_LeftButton = m_Character.FindAction("LeftButton", throwIfNotFound: true);
        m_Character_RightButton = m_Character.FindAction("RightButton", throwIfNotFound: true);
        // LoadOut
        m_LoadOut = asset.FindActionMap("LoadOut", throwIfNotFound: true);
        m_LoadOut_Wheel = m_LoadOut.FindAction("Wheel", throwIfNotFound: true);
        m_LoadOut_Weapon1 = m_LoadOut.FindAction("Weapon1", throwIfNotFound: true);
        m_LoadOut_Weapon2 = m_LoadOut.FindAction("Weapon2", throwIfNotFound: true);
        m_LoadOut_Weapon3 = m_LoadOut.FindAction("Weapon3", throwIfNotFound: true);
        m_LoadOut_Weapon4 = m_LoadOut.FindAction("Weapon4", throwIfNotFound: true);
        m_LoadOut_Weapon5 = m_LoadOut.FindAction("Weapon5", throwIfNotFound: true);
        m_LoadOut_Weapon6 = m_LoadOut.FindAction("Weapon6", throwIfNotFound: true);
        m_LoadOut_Weapon7 = m_LoadOut.FindAction("Weapon7", throwIfNotFound: true);
        m_LoadOut_Weapon8 = m_LoadOut.FindAction("Weapon8", throwIfNotFound: true);
        m_LoadOut_Weapon9 = m_LoadOut.FindAction("Weapon9", throwIfNotFound: true);
        m_LoadOut_Weapon10 = m_LoadOut.FindAction("Weapon10", throwIfNotFound: true);
        m_LoadOut_Weapon11 = m_LoadOut.FindAction("Weapon11", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private ICharacterActions m_CharacterActionsCallbackInterface;
    private readonly InputAction m_Character_Move;
    private readonly InputAction m_Character_Walk;
    private readonly InputAction m_Character_Jump;
    private readonly InputAction m_Character_Crouch;
    private readonly InputAction m_Character_SwimOut;
    private readonly InputAction m_Character_Dash;
    private readonly InputAction m_Character_Use;
    private readonly InputAction m_Character_MouseX;
    private readonly InputAction m_Character_MouseY;
    private readonly InputAction m_Character_LeftButton;
    private readonly InputAction m_Character_RightButton;
    public struct CharacterActions
    {
        private @InputPlayer m_Wrapper;
        public CharacterActions(@InputPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Character_Move;
        public InputAction @Walk => m_Wrapper.m_Character_Walk;
        public InputAction @Jump => m_Wrapper.m_Character_Jump;
        public InputAction @Crouch => m_Wrapper.m_Character_Crouch;
        public InputAction @SwimOut => m_Wrapper.m_Character_SwimOut;
        public InputAction @Dash => m_Wrapper.m_Character_Dash;
        public InputAction @Use => m_Wrapper.m_Character_Use;
        public InputAction @MouseX => m_Wrapper.m_Character_MouseX;
        public InputAction @MouseY => m_Wrapper.m_Character_MouseY;
        public InputAction @LeftButton => m_Wrapper.m_Character_LeftButton;
        public InputAction @RightButton => m_Wrapper.m_Character_RightButton;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMove;
                @Walk.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnWalk;
                @Jump.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnJump;
                @Crouch.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnCrouch;
                @SwimOut.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSwimOut;
                @SwimOut.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSwimOut;
                @SwimOut.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnSwimOut;
                @Dash.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnDash;
                @Use.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnUse;
                @Use.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnUse;
                @Use.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnUse;
                @MouseX.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseX;
                @MouseX.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseX;
                @MouseX.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseX;
                @MouseY.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseY;
                @MouseY.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseY;
                @MouseY.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnMouseY;
                @LeftButton.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnLeftButton;
                @LeftButton.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnLeftButton;
                @LeftButton.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnLeftButton;
                @RightButton.started -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRightButton;
                @RightButton.performed -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRightButton;
                @RightButton.canceled -= m_Wrapper.m_CharacterActionsCallbackInterface.OnRightButton;
            }
            m_Wrapper.m_CharacterActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @SwimOut.started += instance.OnSwimOut;
                @SwimOut.performed += instance.OnSwimOut;
                @SwimOut.canceled += instance.OnSwimOut;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @LeftButton.started += instance.OnLeftButton;
                @LeftButton.performed += instance.OnLeftButton;
                @LeftButton.canceled += instance.OnLeftButton;
                @RightButton.started += instance.OnRightButton;
                @RightButton.performed += instance.OnRightButton;
                @RightButton.canceled += instance.OnRightButton;
            }
        }
    }
    public CharacterActions @Character => new CharacterActions(this);

    // LoadOut
    private readonly InputActionMap m_LoadOut;
    private ILoadOutActions m_LoadOutActionsCallbackInterface;
    private readonly InputAction m_LoadOut_Wheel;
    private readonly InputAction m_LoadOut_Weapon1;
    private readonly InputAction m_LoadOut_Weapon2;
    private readonly InputAction m_LoadOut_Weapon3;
    private readonly InputAction m_LoadOut_Weapon4;
    private readonly InputAction m_LoadOut_Weapon5;
    private readonly InputAction m_LoadOut_Weapon6;
    private readonly InputAction m_LoadOut_Weapon7;
    private readonly InputAction m_LoadOut_Weapon8;
    private readonly InputAction m_LoadOut_Weapon9;
    private readonly InputAction m_LoadOut_Weapon10;
    private readonly InputAction m_LoadOut_Weapon11;
    public struct LoadOutActions
    {
        private @InputPlayer m_Wrapper;
        public LoadOutActions(@InputPlayer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Wheel => m_Wrapper.m_LoadOut_Wheel;
        public InputAction @Weapon1 => m_Wrapper.m_LoadOut_Weapon1;
        public InputAction @Weapon2 => m_Wrapper.m_LoadOut_Weapon2;
        public InputAction @Weapon3 => m_Wrapper.m_LoadOut_Weapon3;
        public InputAction @Weapon4 => m_Wrapper.m_LoadOut_Weapon4;
        public InputAction @Weapon5 => m_Wrapper.m_LoadOut_Weapon5;
        public InputAction @Weapon6 => m_Wrapper.m_LoadOut_Weapon6;
        public InputAction @Weapon7 => m_Wrapper.m_LoadOut_Weapon7;
        public InputAction @Weapon8 => m_Wrapper.m_LoadOut_Weapon8;
        public InputAction @Weapon9 => m_Wrapper.m_LoadOut_Weapon9;
        public InputAction @Weapon10 => m_Wrapper.m_LoadOut_Weapon10;
        public InputAction @Weapon11 => m_Wrapper.m_LoadOut_Weapon11;
        public InputActionMap Get() { return m_Wrapper.m_LoadOut; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LoadOutActions set) { return set.Get(); }
        public void SetCallbacks(ILoadOutActions instance)
        {
            if (m_Wrapper.m_LoadOutActionsCallbackInterface != null)
            {
                @Wheel.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWheel;
                @Wheel.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWheel;
                @Wheel.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWheel;
                @Weapon1.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon1;
                @Weapon1.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon1;
                @Weapon1.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon1;
                @Weapon2.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon2;
                @Weapon2.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon2;
                @Weapon2.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon2;
                @Weapon3.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon3;
                @Weapon3.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon3;
                @Weapon3.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon3;
                @Weapon4.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon4;
                @Weapon4.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon4;
                @Weapon4.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon4;
                @Weapon5.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon5;
                @Weapon5.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon5;
                @Weapon5.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon5;
                @Weapon6.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon6;
                @Weapon6.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon6;
                @Weapon6.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon6;
                @Weapon7.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon7;
                @Weapon7.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon7;
                @Weapon7.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon7;
                @Weapon8.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon8;
                @Weapon8.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon8;
                @Weapon8.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon8;
                @Weapon9.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon9;
                @Weapon9.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon9;
                @Weapon9.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon9;
                @Weapon10.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon10;
                @Weapon10.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon10;
                @Weapon10.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon10;
                @Weapon11.started -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon11;
                @Weapon11.performed -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon11;
                @Weapon11.canceled -= m_Wrapper.m_LoadOutActionsCallbackInterface.OnWeapon11;
            }
            m_Wrapper.m_LoadOutActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Wheel.started += instance.OnWheel;
                @Wheel.performed += instance.OnWheel;
                @Wheel.canceled += instance.OnWheel;
                @Weapon1.started += instance.OnWeapon1;
                @Weapon1.performed += instance.OnWeapon1;
                @Weapon1.canceled += instance.OnWeapon1;
                @Weapon2.started += instance.OnWeapon2;
                @Weapon2.performed += instance.OnWeapon2;
                @Weapon2.canceled += instance.OnWeapon2;
                @Weapon3.started += instance.OnWeapon3;
                @Weapon3.performed += instance.OnWeapon3;
                @Weapon3.canceled += instance.OnWeapon3;
                @Weapon4.started += instance.OnWeapon4;
                @Weapon4.performed += instance.OnWeapon4;
                @Weapon4.canceled += instance.OnWeapon4;
                @Weapon5.started += instance.OnWeapon5;
                @Weapon5.performed += instance.OnWeapon5;
                @Weapon5.canceled += instance.OnWeapon5;
                @Weapon6.started += instance.OnWeapon6;
                @Weapon6.performed += instance.OnWeapon6;
                @Weapon6.canceled += instance.OnWeapon6;
                @Weapon7.started += instance.OnWeapon7;
                @Weapon7.performed += instance.OnWeapon7;
                @Weapon7.canceled += instance.OnWeapon7;
                @Weapon8.started += instance.OnWeapon8;
                @Weapon8.performed += instance.OnWeapon8;
                @Weapon8.canceled += instance.OnWeapon8;
                @Weapon9.started += instance.OnWeapon9;
                @Weapon9.performed += instance.OnWeapon9;
                @Weapon9.canceled += instance.OnWeapon9;
                @Weapon10.started += instance.OnWeapon10;
                @Weapon10.performed += instance.OnWeapon10;
                @Weapon10.canceled += instance.OnWeapon10;
                @Weapon11.started += instance.OnWeapon11;
                @Weapon11.performed += instance.OnWeapon11;
                @Weapon11.canceled += instance.OnWeapon11;
            }
        }
    }
    public LoadOutActions @LoadOut => new LoadOutActions(this);
    public interface ICharacterActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnSwimOut(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnLeftButton(InputAction.CallbackContext context);
        void OnRightButton(InputAction.CallbackContext context);
    }
    public interface ILoadOutActions
    {
        void OnWheel(InputAction.CallbackContext context);
        void OnWeapon1(InputAction.CallbackContext context);
        void OnWeapon2(InputAction.CallbackContext context);
        void OnWeapon3(InputAction.CallbackContext context);
        void OnWeapon4(InputAction.CallbackContext context);
        void OnWeapon5(InputAction.CallbackContext context);
        void OnWeapon6(InputAction.CallbackContext context);
        void OnWeapon7(InputAction.CallbackContext context);
        void OnWeapon8(InputAction.CallbackContext context);
        void OnWeapon9(InputAction.CallbackContext context);
        void OnWeapon10(InputAction.CallbackContext context);
        void OnWeapon11(InputAction.CallbackContext context);
    }
}
